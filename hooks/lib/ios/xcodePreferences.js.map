{"version":3,"sources":["lib/ios/xcodePreferences.js"],"names":["path","require","compare","ConfigXmlHelper","IOS_DEPLOYMENT_TARGET","COMMENT_KEY","context","module","exports","enableAssociativeDomainsCapability","cordovaContext","projectFile","loadProjectFile","activateAssociativeDomains","xcode","addPbxReference","write","xcodeProject","configurations","nonComments","pbxXCBuildConfigurationSection","entitlementsFilePath","pathToEntitlementsFile","config","buildSettings","deploymentTargetIsUpdated","buildDeploymentTarget","toString","console","log","fileReferenceSection","pbxFileReferenceSection","entitlementsRelativeFilePath","isPbxReferenceAlreadySet","createPbxFileReference","isAlreadyInReferencesSection","uuid","fileRefEntry","indexOf","addResourceFile","basename","platform_ios","requireCordovaModule","parseProjectFile","iosPlatformPath","e","obj","keys","Object","newObj","i","len","length","test","join","projectRoot","opts","configXmlHelper","projectName","getProjectName","fileName"],"mappings":"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","file":"lib/ios/xcodePreferences.js","sourcesContent":["/*\nScript activates support for Universal Links in the application by setting proper preferences in the xcode project file.\nWhich is:\n- deployment target set to iOS 9.0\n- .entitlements file added to project PBXGroup and PBXFileReferences section\n- path to .entitlements file added to Code Sign Entitlements preference\n*/\n\n(function() {\n\n  var path = require('path'),\n    compare = require('node-version-compare'),\n    ConfigXmlHelper = require('../configXmlHelper.js'),\n    // pbxFile = require('xcode/lib/pbxFile'),\n    IOS_DEPLOYMENT_TARGET = '8.0',\n    COMMENT_KEY = /_comment$/,\n    context;\n\n  module.exports = {\n    enableAssociativeDomainsCapability: enableAssociativeDomainsCapability\n  }\n\n  // region Public API\n\n  /**\n   * Activate associated domains capability for the application.\n   *\n   * @param {Object} cordovaContext - cordova context object\n   */\n  function enableAssociativeDomainsCapability(cordovaContext) {\n    context = cordovaContext;\n\n    var projectFile = loadProjectFile();\n\n    // adjust preferences\n    activateAssociativeDomains(projectFile.xcode);\n\n    // add entitlements file to pbxfilereference\n    addPbxReference(projectFile.xcode);\n\n    // save changes\n    projectFile.write();\n  }\n\n  // endregion\n\n  // region Alter project file preferences\n\n  /**\n   * Activate associated domains support in the xcode project file:\n   * - set deployment target to ios 9;\n   * - add .entitlements file to Code Sign Entitlements preference.\n   *\n   * @param {Object} xcodeProject - xcode project preferences; all changes are made in that instance\n   */\n  function activateAssociativeDomains(xcodeProject) {\n    var configurations = nonComments(xcodeProject.pbxXCBuildConfigurationSection()),\n      entitlementsFilePath = pathToEntitlementsFile(),\n      config,\n      buildSettings,\n      deploymentTargetIsUpdated;\n\n    for (config in configurations) {\n      buildSettings = configurations[config].buildSettings;\n      buildSettings['CODE_SIGN_ENTITLEMENTS'] = '\"' + entitlementsFilePath + '\"';\n      // if deployment target is less then the required one - increase it\n      if (buildSettings['IPHONEOS_DEPLOYMENT_TARGET']) {\n        var buildDeploymentTarget = buildSettings['IPHONEOS_DEPLOYMENT_TARGET'].toString();\n        if (compare(buildDeploymentTarget, IOS_DEPLOYMENT_TARGET) == -1) {\n          buildSettings['IPHONEOS_DEPLOYMENT_TARGET'] = IOS_DEPLOYMENT_TARGET;\n          deploymentTargetIsUpdated = true;\n        }\n      }\n else {\n        buildSettings['IPHONEOS_DEPLOYMENT_TARGET'] = IOS_DEPLOYMENT_TARGET;\n        deploymentTargetIsUpdated = true;\n      }\n    }\n\n    if (deploymentTargetIsUpdated) {\n      console.log('IOS project now has deployment target set as: ' + IOS_DEPLOYMENT_TARGET);\n    }\n\n    console.log('IOS project Code Sign Entitlements now set to: ' + entitlementsFilePath);\n  }\n\n  // endregion\n\n  // region PBXReference methods\n\n  /**\n   * Add .entitlemets file into the project.\n   *\n   * @param {Object} xcodeProject - xcode project preferences; all changes are made in that instance\n   */\n  function addPbxReference(xcodeProject) {\n    var fileReferenceSection = nonComments(xcodeProject.pbxFileReferenceSection()),\n      entitlementsRelativeFilePath = pathToEntitlementsFile();\n\n    if (isPbxReferenceAlreadySet(fileReferenceSection, entitlementsRelativeFilePath)) {\n      console.log('Entitlements file is in reference section.');\n      return;\n    }\n\n    console.log('Entitlements file is not in references section, adding it');\n    createPbxFileReference(xcodeProject, entitlementsRelativeFilePath);\n  }\n\n  /**\n   * Check if .entitlemets file reference already set.\n   *\n   * @param {Object} fileReferenceSection - PBXFileReference section\n   * @param {String} entitlementsRelativeFilePath - relative path to entitlements file\n   * @return true - if reference is set; otherwise - false\n   */\n  function isPbxReferenceAlreadySet(fileReferenceSection, entitlementsRelativeFilePath) {\n    var isAlreadyInReferencesSection = false,\n      uuid,\n      fileRefEntry;\n\n    for (uuid in fileReferenceSection) {\n      fileRefEntry = fileReferenceSection[uuid];\n      if (fileRefEntry.path && fileRefEntry.path.indexOf(entitlementsRelativeFilePath) > -1) {\n        isAlreadyInReferencesSection = true;\n        break;\n      }\n    }\n\n    return isAlreadyInReferencesSection;\n  }\n\n  /**\n   * Create reference to the entitlements file in the xcode project.\n   *\n   * @param {Object} xcodeProject - xcode project preferences; all changes are made in that instance\n   * @param {String} entitlementsRelativeFilePath - relative path to entitlemets file\n   */\n  function createPbxFileReference(xcodeProject, entitlementsRelativeFilePath) {\n    // commented for now\n    // var rootGroup = nonComments(xcodeProject.pbxGroupByName('CustomTemplate')),\n    //   entitlementsPbxFile = new pbxFile(entitlementsRelativeFilePath);\n    //\n    // entitlementsPbxFile.fileRef = xcodeProject.generateUuid(),\n    //   entitlementsPbxFile.uuid = xcodeProject.generateUuid();\n    //\n    // xcodeProject.addToPbxFileReferenceSection(entitlementsPbxFile);\n    //\n    // rootGroup.children.push({\n    //   'value': entitlementsPbxFile.fileRef,\n    //   'comment': path.basename(entitlementsRelativeFilePath)\n    // });\n    xcodeProject.addResourceFile(path.basename(entitlementsRelativeFilePath));\n  }\n\n  // region Xcode project file helpers\n\n  /**\n   * Load iOS project file from platform specific folder.\n   *\n   * @return {Object} projectFile - project file information\n   */\n  function loadProjectFile() {\n    var platform_ios,\n      projectFile;\n\n    try {\n      // try pre-5.0 cordova structure\n      platform_ios = context.requireCordovaModule('cordova-lib/src/plugman/platforms')['ios'];\n      projectFile = platform_ios.parseProjectFile(iosPlatformPath());\n    } catch (e) {\n      // let's try cordova 5.0 structure\n      platform_ios = context.requireCordovaModule('cordova-lib/src/plugman/platforms/ios');\n      projectFile = platform_ios.parseProjectFile(iosPlatformPath());\n    }\n\n    return projectFile;\n  }\n\n  /**\n   * Remove comments from the file.\n   *\n   * @param {Object} obj - file object\n   * @return {Object} file object without comments\n   */\n  function nonComments(obj) {\n    var keys = Object.keys(obj),\n      newObj = {};\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n      if (!COMMENT_KEY.test(keys[i])) {\n        newObj[keys[i]] = obj[keys[i]];\n      }\n    }\n\n    return newObj;\n  }\n\n  // endregion\n\n  // region Path helpers\n\n  function iosPlatformPath() {\n    return path.join(projectRoot(), 'platforms', 'ios');\n  }\n\n  function projectRoot() {\n    return context.opts.projectRoot;\n  }\n\n  function pathToEntitlementsFile() {\n    var configXmlHelper = new ConfigXmlHelper(context),\n      projectName = configXmlHelper.getProjectName(),\n      fileName = projectName + '.entitlements';\n\n    return path.join(projectName, 'Resources', fileName);\n  }\n\n  // endregion\n\n})();\n"],"sourceRoot":"/source/"}